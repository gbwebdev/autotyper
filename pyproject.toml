[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "autotyper"
version = "1.0.0"
description = "Layout-aware, Wayland-friendly password typer with multiple backends"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Guillaume Biton", email = "guillaume.biton@example.com"}
]
maintainers = [
    {name = "Guillaume Biton", email = "guillaume.biton@example.com"}
]
keywords = ["keyboard", "typing", "automation", "password", "uinput", "wayland"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Desktop Environment",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]
requires-python = ">=3.8"
dependencies = [
    "evdev>=1.4.0; sys_platform == 'linux'",
    "pyautogui>=0.9.54; sys_platform != 'linux' and sys_platform != 'darwin'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=22.0",
    "isort>=5.0",
    "mypy>=1.0",
    "flake8>=5.0",
    "pyinstaller>=5.0",
]
test = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
]
build = [
    "pyinstaller>=5.0",
]

[project.urls]
Homepage = "https://github.com/guillaume-biton/autotyper"
Repository = "https://github.com/guillaume-biton/autotyper"
Issues = "https://github.com/guillaume-biton/autotyper/issues"
Documentation = "https://github.com/guillaume-biton/autotyper#readme"

[project.scripts]
autotyper = "autotyper.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
autotyper = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=autotyper",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.coverage.run]
source = ["src/autotyper"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
